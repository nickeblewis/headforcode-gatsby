{
    "data": {
        "markdownRemark": {
            "html": "<h1>Say Hello World!</h1>\n<p>It is a custom when learning a new programming language and as a means of\ntesting that all is up and running, to write a <a href=\"https://en.wikipedia.org/wiki/%22Hello,_World!%22_program\">“Hello World”</a> program.</p>\n<p>So let us build one in Node!</p>\n<p>NOTE: You will have already by this point installed Node, NPM, Git Bash and Visual Studio Code. If not please do so now!</p>\n<p>First of all you need to open up Git Bash because we shall be using it for a\nlot of the work that we shall be doing when working with Node based projects. It\nenables us to use Linux commands.</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-bash\"><code>$ <span class=\"token function\">cd</span> proj\n</code></pre>\n      </div>\n<p>Change directory so that you are in your regular ‘proj’ folder where you keep\nall of your projects.</p>\n<p>Next we shall create a new folder beneath this for our new ‘Hello World’ project</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-bash\"><code>$ <span class=\"token function\">mkdir</span> hello-world\n</code></pre>\n      </div>\n<p>Next we want to change directory using the “cd” command, so in order to do this </p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-bash\"><code>$ <span class=\"token function\">cd</span> hello-world\n</code></pre>\n      </div>\n<p>Linux has a great command for simply creating files called, curiously “touch”, so let’s use that to create our new JS file.</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-bash\"><code>$ <span class=\"token function\">touch</span> hello.js\n</code></pre>\n      </div>\n<p>Now we shall open the file and add some code to it</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-bash\"><code>$ code hello.js\n</code></pre>\n      </div>\n<p>This is a shortcut to opening files in Visual Studio Code, we could also have typed ‘code .’ which would have launched VSC at the current directory.</p>\n<p>Now we can add the simplest of pieces of code :-)</p>\n<p>Type in the following and then save it:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-bash\"><code>console.log<span class=\"token punctuation\">(</span><span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>\n<p>Once saved, go back to the Git Bash terminal window and type:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-bash\"><code>$ node hello.js\n</code></pre>\n      </div>\n<p>NOTE: You can drop the ‘.js’ if you wish, as Node will be able to work things out for itself, the clever chap</p>\n<p>You shall now see the message “Hello World” appear on the console just beneath your comannd. That’s it, you have just run\nJavaScript from your console and outside of the web browser. Soon we shall move on to looking at how we can build our very\nown web servers complete with database connections and many other things. In fact Node can be used for so much more. I have\nheard people even use it for programming hardware, such as Robots, Quad-copters and all sorts!!!</p>\n<p>Back to: <a href=\"/courses/series/javascript\">Course Index</a></p>",
            "frontmatter": {
                "title": "Hello World"
            }
        }
    },
    "pathContext": {
        "slug": "/guides/dandavis/week42/hello-world/"
    }
}