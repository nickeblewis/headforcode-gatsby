{
    "data": {
        "markdownRemark": {
            "html": "<p>Hi Dan,</p>\n<p>Since we are having problems with CodeAcademy, lets park those until Friday when I will have some more time to take a proper look at them. So in the meantime, lets spend a little time looking at headforcode and our methods we shall be using for building sites using React, the great javascript framework.</p>\n<p>(Next week or soon afterwards would be a great time to pick up on CodeAcademy and their React course)</p>\n<p>So before going much further, you will need to update your local headforcode.</p>\n<p>$ cd /c/proj/headforcode\n$ git pull\n$ npm install</p>\n<p>You need to run the <code>git pull</code> in order to pull down changes I’ve made, the <code>npm install</code> to install new Node packages that have been added, I may have introduced a couple of new ones. In the future, <a href=\"todo.md\">I will tell you more about these and where they fit in</a>…</p>\n<h3>Let’s take a tour</h3>\n<p>Open up the headforcode project in VSC and then take a look at VSC’s explorer panel on the left-hand side. Incidentally you can show/hide this by pressing CTRL+B together. You can also jump between the main 5 side-panels using:</p>\n<ul>\n<li><code>CTRL+SHIFT+E</code> to switch to the explorer</li>\n<li><code>CTRL+SHIFT+F</code> to switch to the search tool</li>\n<li><code>CTRL+SHIFT+G</code> to switch to the Git panel</li>\n<li><code>CTRL+SHIFT+D</code> to go to the debugger</li>\n<li><code>CTRL+SHIFT+X</code> to go to the extensions</li>\n</ul>\n<p>So for now, let’s make sure that we are viewing the Explorer (<code>CTRL+SHIFT+E</code>)</p>\n<p>You will see 6 folders, some files starting with a full-stop, package.json, README.md and 3 webpack related files. So lets take a look at the folders first.</p>\n<p><strong>admin</strong></p>\n<p>This is new new new new new, very new, lol!!! It is however a little experimental at the moment but you can try it out if you wish. I shall put up a separate article about it later and link to it from here. It is essentially a dashboard that allows you to write new blog posts and edit old ones via a web based UI. It is based on Netlify’s CMS project that they are building and I am helping them test it out. Over the past couple of days, I helped them iron out some issues with their documentation.</p>\n<p><strong>content</strong></p>\n<p>This is where we shall spend our time today, getting to know how this works…</p>\n<p>If you open this folder up, you will see more folders (which in the case of this site double up as being called <em>collections</em>). The first folder called assets, is where you should store image files and other such things. Confusingly we currently have two folders called <em>blog</em> and <em>posts</em> which will change I think in the future, as we only actually need the latter.</p>\n<p>Let’s pick out one of the folders and I’d suggest, <em>courses</em> because that is where this page lives and it’s under the folders <em>dandavis</em> and <em>week43</em>, you shouldd find the file called <em>changes.md</em>.</p>\n<p>Open it and have a look.</p>\n<h1>(TODO this is a comment by the way, it wont get rendered to the page)</h1>\n<p>The file is written in something called <em>markdown</em> which is essentially a text file with special powers as it were. I highly recommend taking a look at [TODO: insert link here when I get wifi again!!] as they explain how Markdown works and it is very much an important aspect of this site.</p>\n<p>We are not using an databases for our content, we are instead using static files and when running either <code>npm start</code> or <code>npm run build</code> the website is then converted into a standard HTML site. So we are able to deploy the site via Github and automate a lot of the process. This will become clearer as we work through examples in future sessions.</p>\n<p>That is not to say we can’t use databases for some aspects of the site and I shall introduce some examples as we move along.</p>\n<p>I have created a new folder called <em>danslab</em> under the <em>content</em> folder with a single file in it, you can find that either via the VSC Explorer <code>CTRL+SHIFT+E</code> or another cool way…</p>\n<p>…Press <code>CTRL+P</code> together and a dropdown will appear from the top center of this application. </p>\n<p>Then type <em>danslab</em> and the list of items changes to show about 3 possible files, the bottom one is the one we need, just use the cursor keys or your mouse to select it.</p>\n<p>Voila! This opens up your file in the editor panel and you can have a go at editing it. However before you do, let’s create a branch for you to do this in and here is a new way of doing that, an alternatve to the method we used last time.</p>\n<p>You can create branches from VSC, follow the steps below:</p>\n<ul>\n<li>Press <code>CTRL+P</code> and a dropdown appears that you can use to search for files or run commands</li>\n<li>Start typing <code>git</code> followed by tapping the <code>[spacebar]</code> and typing <code>branch</code> notice how the dropdown auto-completes when you type?</li>\n<li>You can type the rest in manually or use the keyboard to select the suggestions given</li>\n<li>Let’s type it in by hand this time, so once you’ve typed <code>git branch</code> and added a <code>space</code> type in your branch name which can be any string of text without spaces and lower-case</li>\n<li>Then hit <code>enter</code> anf notice how right down in the bottom left of VSC the branch indicator changes to show your new branch? It also does a “checkout”.</li>\n<li>You can now make changes to the file <code></code>content/danslab/index.md” and read up on [TODO: add link] markdown and what you can do with it. Once you’ve played around, you can send me a pull-request ;-)</li>\n</ul>\n<p>So this demonstrates how we can use VSC to do a lot of the things we would otherwise do via the Terminal, personally I prefer doing it this way, it lends itself nicely to getting things done more expressively.</p>\n<p>So to wrap up this excercise, let’s commit our changes:</p>\n<ul>\n<li>Press <code>CTRL+SHIFT+G</code> to switcch to the Git section in the sidebar which you can also click on with your mouse. It will not change the main display in any way.</li>\n<li>Notice that the icon has a counter on it, this is the “number of changes” indicator and at the moment, there will probably only be one.</li>\n<li>Type in a message in the box and once done, as they suggest, press <code>CTRL+ENTER</code> to commit the changes</li>\n<li>Next click on the elipses next to the tick, the refresh icon and a drop-down menu appears</li>\n<li>Choose push (or it might be publish in this instance)</li>\n<li>It will then prompt you whether you wish to publish or not. We do, so say yes. This then creates your branch for you on origin.</li>\n</ul>\n<p>That’s it from the VSC side of things, next you will want to raise a “pull request” (or PR for short)</p>\n<ul>\n<li>Using your browser, go to <a href=\"https://github.com/nickeblewis/headforcode\">https://github.com/nickeblewis/headforcode</a></li>\n<li>Raise a pull request</li>\n<li>I normally get a message but just to be certain, email/slack/nudge me to take a look</li>\n</ul>\n<p>Once the pull-request has been checked over and merged back to the master by myself:</p>\n<ul>\n<li>You can switch back to the master branch in VSC</li>\n<li>Click on the branch indicator at the bottom right of VSC and then in the dropdown that appears from the top, select master</li>\n<li>Then swicth to the Git section <code>CTRL+SHIFT+G</code></li>\n<li>Click on the elipses again</li>\n<li>This time select pull</li>\n</ul>\n<p>DONE! The circle is complete as it were and you can then pick up your next coding task :-)</p>\n<p>In the next article, I will show you some more things, more features of the headforcode project and this will keep us busy for awhile. Though I shall be doing some stuff on it myself most of the time. I will always let you know when is a good time to do a <code>git pull</code> to make sure that you’ve got the latest code available.</p>\n<p>THANKS FOR READING :-)</p>\n<h2>Further READING</h2>\n<p>Summary of other things to read up on</p>\n<p>TODO</p>",
            "frontmatter": {
                "title": "Making changes"
            }
        }
    },
    "pathContext": {
        "slug": "/guides/dandavis/week43/changes/"
    }
}